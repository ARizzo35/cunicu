.nh
.TH "MINE" "3" "Jan 2022" "Auto generated by spf13/cobra" ""

.SH NAME
.PP
wice-daemon - Start the daemon


.SH SYNOPSIS
.PP
\fBwice daemon [interfaces...] [flags]\fP


.SH DESCRIPTION
.PP
Start the daemon


.SH OPTIONS
.PP
\fB-b\fP, \fB--backend\fP=
	backend types / URLs

.PP
\fB-c\fP, \fB--config\fP=""
	Path of configuration file

.PP
\fB-h\fP, \fB--help\fP[=false]
	help for daemon

.PP
\fB--ice-candidate-type\fP=
	usable candidate types (**, one of "host", "srflx", "prflx", "relay")

.PP
\fB--ice-check-interval\fP=200ms
	interval at which the agent performs candidate checks in the connecting phase

.PP
\fB--ice-disconnected-timout\fP=5s
	time till an Agent transitions disconnected

.PP
\fB--ice-failed-timeout\fP=25s
	time until an Agent transitions to failed after disconnected

.PP
\fB-k\fP, \fB--ice-insecure-skip-verify\fP[=false]
	skip verification of TLS certificates for secure STUN/TURN servers

.PP
\fB--ice-interface-filter\fP=".*"
	regex for filtering local interfaces for ICE candidate gathering (e.g. "eth[0-9]+")

.PP
\fB--ice-keepalive-interval\fP=2s
	interval netween STUN keepalives

.PP
\fB-l\fP, \fB--ice-lite\fP[=false]
	lite agents do not perform connectivity check and only provide host candidates

.PP
\fB--ice-max-binding-requests\fP=7
	maximum number of binding request before considering a pair failed

.PP
\fB-m\fP, \fB--ice-mdns\fP[=false]
	enable local Multicast DNS discovery

.PP
\fB--ice-nat-1to1-ip\fP=
	IP addresses which will be added as local server reflexive candidates

.PP
\fB--ice-network-type\fP=
	usable network types (**, select from "udp4", "udp6", "tcp4", "tcp6")

.PP
\fB-P\fP, \fB--ice-pass\fP=""
	password for STUN/TURN credentials

.PP
\fB--ice-port-max\fP=0
	maximum port for allocation policy (range: 0-65535)

.PP
\fB--ice-port-min\fP=0
	minimum port for allocation policy (range: 0-65535)

.PP
\fB--ice-restart-interval\fP=5s
	time to wait before ICE restart

.PP
\fB-U\fP, \fB--ice-user\fP=""
	username for STUN/TURN credentials

.PP
\fB-f\fP, \fB--interface-filter\fP=".\fI"
	regex for filtering Wireguard interfaces (e.g. "wg-.\fP")

.PP
\fB-d\fP, \fB--log-level\fP="info"
	log level (one of "panic", "fatal", "error", "warn", "info", "debug", "trace")

.PP
\fB-p\fP, \fB--proxy\fP="auto"
	proxy type to use

.PP
\fB-s\fP, \fB--socket\fP="/var/run/wice.sock"
	Unix control and monitoring socket

.PP
\fB--socket-wait\fP[=false]
	wait until first client connected to control socket before continuing start

.PP
\fB-a\fP, \fB--url\fP=
	STUN and/or TURN server addresses

.PP
\fB-i\fP, \fB--watch-interval\fP=1s
	interval at which we are polling the kernel for updates on the Wireguard interfaces

.PP
\fB-w\fP, \fB--wg-config-path\fP="/etc/wireguard"
	base path to search for Wireguard configuration files

.PP
\fB-S\fP, \fB--wg-config-sync\fP[=false]
	sync Wireguard interface with configuration file (see "wg synconf"

.PP
\fB-u\fP, \fB--wg-user\fP[=false]
	start userspace Wireguard daemon


.SH SEE ALSO
.PP
\fBwice(3)\fP


.SH HISTORY
.PP
7-Jan-2022 Auto generated by spf13/cobra
